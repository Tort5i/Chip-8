#pragma once

// Opcodes
#define SET_INDEX_REG_OPCODE 0xA000
#define CLS_SCREEN_OPCODE 0x00E0
#define RET_FROM_SUBRTN_OPCODE 0x00EE
#define CALL_SUBRTN_OPCODE 0x2000
#define ADD_VX_VY_OPCODE 0x8004
#define VX_BCD_IN_MEM_OPCODE 0x33
#define JMP_OPCODE 0x1000
#define INC_PC_VK_EQUAL 0x3000
#define INC_PC_VK_NEQUAL 0x4000
#define INC_PC_VK_VY_EQUAL 0x5000
#define MOV_KK_TO_VX 0x6000
#define ADD_VX_KK 0x7000
#define MOV_VY_TO_VX 0x8000
#define OR_VX_VY 0x8001
#define AND_VX_VY 0x8002
#define XOR_VX_VY 0x8003
#define SUB_VX_VY 0x8005
#define SHR_VX 0x8006
#define SUB_VY_VX 0x8007
#define MULT_VX_2 0x800E
#define INC_PC_VK_VY_NEQUAL 0x9000
#define JMP_NNN_PLUS_V0 0xB000
#define RAND 0xC000
#define DRAW 0xD000
#define IS_KEY_DOWN 0x000E
#define IS_KEY_UP 0x0001
#define VX_DELAY_TIMER 0x07
#define IS_KEY_PRESSED 0x0A
#define DELAY_EQUALS_VX 0x15
#define SOUND_EQUALS_VX 0x18
#define ADD_I_VX 0x1E
#define I_EQUALS_SPITE 0x29
#define COPY_V0_TO_VX_TO_MEM 0x55
#define READ_V0_TO_VX_FROM_MEM 0x65

class Chip8 {
private:
    unsigned short opcode;
    unsigned char memory[4096];
    unsigned char V[16];
    unsigned short indexRegister;
    unsigned short pc;
    unsigned char delayTimer;
    unsigned char soundTimer;
    unsigned short stack[16];
    unsigned short stackPointer;
    bool drawFlag;

    unsigned char fontset[80] =
{ 
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

  bool gameLoaded{false};


public:
    unsigned char key[16];
    unsigned char gfx[64 * 32];

    void Initilize();
    void load(const char *path);
    void EmulateCycle();

    bool GameLoaded();
    bool shouldDraw();
    void drawn();
};